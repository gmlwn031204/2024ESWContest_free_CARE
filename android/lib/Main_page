import 'dart:async';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'Impact_page.dart';
import 'package:flutter_bluetooth_serial/flutter_bluetooth_serial.dart';

class Main_page extends StatefulWidget {
  final String name;
  final String relation;
  final String phone;

  const Main_page({
    super.key,
    required this.name,
    required this.relation,
    required this.phone,
  });

  @override
  State<Main_page> createState() => _Main_pageState();
}

class _Main_pageState extends State<Main_page> {
  bool _navigated = false;
  BluetoothConnection? connection;
  StreamSubscription? subscription;

  @override
  void initState() {
    super.initState();
    _connectToBluetooth();
  }

  @override
  void dispose() {
    subscription?.cancel();
    connection?.dispose();
    super.dispose();
  }

  // 블루투스 연결 함수
  void _connectToBluetooth() async {
    try {
      // HC-06의 MAC 주소를 통해 연결
      BluetoothConnection.toAddress("98:D3:31:F5:B9:E7").then((BluetoothConnection conn) {
        print('Connected to the device');
        connection = conn;

        // 데이터 수신 리스너 설정
        subscription = connection!.input!.listen((Uint8List data) {
          String message = String.fromCharCodes(data);
          print('Received: $message');

          // 충돌 감지 메시지를 받으면 Impact_page로 이동
          if (message.trim() == "CRASH_ALERT" && !_navigated && mounted) {
            _navigated = true;
            Navigator.pushReplacement(
              context,
              MaterialPageRoute(
                builder: (context) => Impact_page(
                  name: widget.name,
                  relation: widget.relation,
                  phone: widget.phone,
                ),
              ),
            );
          }
        });
      }).catchError((error) {
        print('Cannot connect, exception occurred: $error');
      });
    } catch (e) {
      print('Error connecting to Bluetooth device: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: Center(
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 24.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              const SizedBox(height: 145),
              Text(
                'SafeRide',
                style: TextStyle(
                  fontSize: 73,
                  fontWeight: FontWeight.bold,
                  letterSpacing: 1.5,
                  color: Colors.black,
                  shadows: [
                    Shadow(
                      blurRadius: 8.0,
                      color: Colors.black26,
                      offset: Offset(0, 4),
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 48),
              Align(
                alignment: Alignment.centerLeft,
                child: Text('보호자 이름', style: TextStyle(fontSize: 14, color: Colors.black87)),
              ),
              const SizedBox(height: 8),
              Container(
                width: double.infinity,
                padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 16),
                decoration: BoxDecoration(
                  color: Colors.grey[300],
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Text(
                  widget.name,
                  style: const TextStyle(
                    fontSize: 28,
                    fontWeight: FontWeight.bold,
                    color: Colors.black,
                  ),
                  textAlign: TextAlign.center,
                ),
              ),
              const SizedBox(height: 20),
              Align(
                alignment: Alignment.centerLeft,
                child: Text('관계', style: TextStyle(fontSize: 14, color: Colors.black87)),
              ),
              const SizedBox(height: 8),
              Container(
                width: double.infinity,
                padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 16),
                decoration: BoxDecoration(
                  color: Colors.grey[300],
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Text(
                  widget.relation,
                  style: const TextStyle(
                    fontSize: 28,
                    fontWeight: FontWeight.bold,
                    color: Colors.black,
                  ),
                  textAlign: TextAlign.center,
                ),
              ),
              const SizedBox(height: 20),
              Align(
                alignment: Alignment.centerLeft,
                child: Text('보호자 번호', style: TextStyle(fontSize: 14, color: Colors.black87)),
              ),
              const SizedBox(height: 8),
              Container(
                width: double.infinity,
                padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 16),
                decoration: BoxDecoration(
                  color: Colors.grey[300],
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Text(
                  widget.phone,
                  style: const TextStyle(
                    fontSize: 28,
                    fontWeight: FontWeight.bold,
                    color: Colors.black,
                  ),
                  textAlign: TextAlign.center,
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

